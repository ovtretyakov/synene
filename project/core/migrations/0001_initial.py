# Generated by Django 2.2.1 on 2019-05-04 08:04

import project.core.models
from django.db import migrations, models
import django.db.models.deletion

# import requests
# from bs4 import BeautifulSoup

class Migration(migrations.Migration):

    initial = True

    def insertSport(apps, schema_editor):
        Sport = apps.get_model('core', 'Sport')
        sport = Sport(slug='football', name="Football", is_loadable=True, is_calculated=True)
        sport.save()
        sport = Sport(slug='na', name="Unknown", is_loadable=False, is_calculated=False)
        sport.save()


    def load_countries(apps, schema_editor):
        def create_or_update_country(apps, slug, country_code, country_name):
            slug = slug.lower()
            Country = apps.get_model('core', 'Country')
            person, created = Country.objects.get_or_create(
                slug=slug, 
                defaults={"name": country_name, "code": country_code}
            )

        create_or_update_country(apps, 'na', '0', 'Unknown')

        countries = [
        {"slug":"AFG","country_code":"93","country_name":"Afghanistan",},
        {"slug":"ALB","country_code":"355","country_name":"Albania",},
        {"slug":"DZA","country_code":"213","country_name":"Algeria",},
        {"slug":"ASM","country_code":"1-684","country_name":"American Samoa",},
        {"slug":"AND","country_code":"376","country_name":"Andorra",},
        {"slug":"AGO","country_code":"244","country_name":"Angola",},
        {"slug":"AIA","country_code":"1-264","country_name":"Anguilla",},
        {"slug":"ATA","country_code":"672","country_name":"Antarctica",},
        {"slug":"ATG","country_code":"1-268","country_name":"Antigua and Barbuda",},
        {"slug":"ARG","country_code":"54","country_name":"Argentina",},
        {"slug":"ARM","country_code":"374","country_name":"Armenia",},
        {"slug":"ABW","country_code":"297","country_name":"Aruba",},
        {"slug":"AUS","country_code":"61","country_name":"Australia",},
        {"slug":"AUT","country_code":"43","country_name":"Austria",},
        {"slug":"AZE","country_code":"994","country_name":"Azerbaijan",},
        {"slug":"BHS","country_code":"1-242","country_name":"Bahamas",},
        {"slug":"BHR","country_code":"973","country_name":"Bahrain",},
        {"slug":"BGD","country_code":"880","country_name":"Bangladesh",},
        {"slug":"BRB","country_code":"1-246","country_name":"Barbados",},
        {"slug":"BLR","country_code":"375","country_name":"Belarus",},
        {"slug":"BEL","country_code":"32","country_name":"Belgium",},
        {"slug":"BLZ","country_code":"501","country_name":"Belize",},
        {"slug":"BEN","country_code":"229","country_name":"Benin",},
        {"slug":"BMU","country_code":"1-441","country_name":"Bermuda",},
        {"slug":"BTN","country_code":"975","country_name":"Bhutan",},
        {"slug":"BOL","country_code":"591","country_name":"Bolivia",},
        {"slug":"BIH","country_code":"387","country_name":"Bosnia and Herzegovina",},
        {"slug":"BWA","country_code":"267","country_name":"Botswana",},
        {"slug":"BRA","country_code":"55","country_name":"Brazil",},
        {"slug":"IOT","country_code":"246","country_name":"British Indian Ocean Territory",},
        {"slug":"VGB","country_code":"1-284","country_name":"British Virgin Islands",},
        {"slug":"BRN","country_code":"673","country_name":"Brunei",},
        {"slug":"BGR","country_code":"359","country_name":"Bulgaria",},
        {"slug":"BFA","country_code":"226","country_name":"Burkina Faso",},
        {"slug":"BDI","country_code":"257","country_name":"Burundi",},
        {"slug":"KHM","country_code":"855","country_name":"Cambodia",},
        {"slug":"CMR","country_code":"237","country_name":"Cameroon",},
        {"slug":"CAN","country_code":"1","country_name":"Canada",},
        {"slug":"CPV","country_code":"238","country_name":"Cape Verde",},
        {"slug":"CYM","country_code":"1-345","country_name":"Cayman Islands",},
        {"slug":"CAF","country_code":"236","country_name":"Central African Republic",},
        {"slug":"TCD","country_code":"235","country_name":"Chad",},
        {"slug":"CHL","country_code":"56","country_name":"Chile",},
        {"slug":"CHN","country_code":"86","country_name":"China",},
        {"slug":"CXR","country_code":"61","country_name":"Christmas Island",},
        {"slug":"CCK","country_code":"61","country_name":"Cocos Islands",},
        {"slug":"COL","country_code":"57","country_name":"Colombia",},
        {"slug":"COM","country_code":"269","country_name":"Comoros",},
        {"slug":"COK","country_code":"682","country_name":"Cook Islands",},
        {"slug":"CRI","country_code":"506","country_name":"Costa Rica",},
        {"slug":"HRV","country_code":"385","country_name":"Croatia",},
        {"slug":"CUB","country_code":"53","country_name":"Cuba",},
        {"slug":"CUW","country_code":"599","country_name":"Curacao",},
        {"slug":"CYP","country_code":"357","country_name":"Cyprus",},
        {"slug":"CZE","country_code":"420","country_name":"Czech Republic",},
        {"slug":"COD","country_code":"243","country_name":"Democratic Republic of the Congo",},
        {"slug":"DNK","country_code":"45","country_name":"Denmark",},
        {"slug":"DJI","country_code":"253","country_name":"Djibouti",},
        {"slug":"DMA","country_code":"1-767","country_name":"Dominica",},
        {"slug":"DOM","country_code":"1-809, 1-829, 1-849","country_name":"Dominican Republic",},
        {"slug":"TLS","country_code":"670","country_name":"East Timor",},
        {"slug":"ECU","country_code":"593","country_name":"Ecuador",},
        {"slug":"EGY","country_code":"20","country_name":"Egypt",},
        {"slug":"SLV","country_code":"503","country_name":"El Salvador",},
        {"slug":"GNQ","country_code":"240","country_name":"Equatorial Guinea",},
        {"slug":"ERI","country_code":"291","country_name":"Eritrea",},
        {"slug":"EST","country_code":"372","country_name":"Estonia",},
        {"slug":"ETH","country_code":"251","country_name":"Ethiopia",},
        {"slug":"FLK","country_code":"500","country_name":"Falkland Islands",},
        {"slug":"FRO","country_code":"298","country_name":"Faroe Islands",},
        {"slug":"FJI","country_code":"679","country_name":"Fiji",},
        {"slug":"FIN","country_code":"358","country_name":"Finland",},
        {"slug":"FRA","country_code":"33","country_name":"France",},
        {"slug":"PYF","country_code":"689","country_name":"French Polynesia",},
        {"slug":"GAB","country_code":"241","country_name":"Gabon",},
        {"slug":"GMB","country_code":"220","country_name":"Gambia",},
        {"slug":"GEO","country_code":"995","country_name":"Georgia",},
        {"slug":"DEU","country_code":"49","country_name":"Germany",},
        {"slug":"GHA","country_code":"233","country_name":"Ghana",},
        {"slug":"GIB","country_code":"350","country_name":"Gibraltar",},
        {"slug":"GRC","country_code":"30","country_name":"Greece",},
        {"slug":"GRL","country_code":"299","country_name":"Greenland",},
        {"slug":"GRD","country_code":"1-473","country_name":"Grenada",},
        {"slug":"GUM","country_code":"1-671","country_name":"Guam",},
        {"slug":"GTM","country_code":"502","country_name":"Guatemala",},
        {"slug":"GGY","country_code":"44-1481","country_name":"Guernsey",},
        {"slug":"GIN","country_code":"224","country_name":"Guinea",},
        {"slug":"GNB","country_code":"245","country_name":"Guinea-Bissau",},
        {"slug":"GUY","country_code":"592","country_name":"Guyana",},
        {"slug":"HTI","country_code":"509","country_name":"Haiti",},
        {"slug":"HND","country_code":"504","country_name":"Honduras",},
        {"slug":"HKG","country_code":"852","country_name":"Hong Kong",},
        {"slug":"HUN","country_code":"36","country_name":"Hungary",},
        {"slug":"ISL","country_code":"354","country_name":"Iceland",},
        {"slug":"IND","country_code":"91","country_name":"India",},
        {"slug":"IDN","country_code":"62","country_name":"Indonesia",},
        {"slug":"IRN","country_code":"98","country_name":"Iran",},
        {"slug":"IRQ","country_code":"964","country_name":"Iraq",},
        {"slug":"IRL","country_code":"353","country_name":"Ireland",},
        {"slug":"IMN","country_code":"44-1624","country_name":"Isle of Man",},
        {"slug":"ISR","country_code":"972","country_name":"Israel",},
        {"slug":"ITA","country_code":"39","country_name":"Italy",},
        {"slug":"CIV","country_code":"225","country_name":"Ivory Coast",},
        {"slug":"JAM","country_code":"1-876","country_name":"Jamaica",},
        {"slug":"JPN","country_code":"81","country_name":"Japan",},
        {"slug":"JEY","country_code":"44-1534","country_name":"Jersey",},
        {"slug":"JOR","country_code":"962","country_name":"Jordan",},
        {"slug":"KAZ","country_code":"7","country_name":"Kazakhstan",},
        {"slug":"KEN","country_code":"254","country_name":"Kenya",},
        {"slug":"KIR","country_code":"686","country_name":"Kiribati",},
        {"slug":"XKX","country_code":"383","country_name":"Kosovo",},
        {"slug":"KWT","country_code":"965","country_name":"Kuwait",},
        {"slug":"KGZ","country_code":"996","country_name":"Kyrgyzstan",},
        {"slug":"LAO","country_code":"856","country_name":"Laos",},
        {"slug":"LVA","country_code":"371","country_name":"Latvia",},
        {"slug":"LBN","country_code":"961","country_name":"Lebanon",},
        {"slug":"LSO","country_code":"266","country_name":"Lesotho",},
        {"slug":"LBR","country_code":"231","country_name":"Liberia",},
        {"slug":"LBY","country_code":"218","country_name":"Libya",},
        {"slug":"LIE","country_code":"423","country_name":"Liechtenstein",},
        {"slug":"LTU","country_code":"370","country_name":"Lithuania",},
        {"slug":"LUX","country_code":"352","country_name":"Luxembourg",},
        {"slug":"MAC","country_code":"853","country_name":"Macau",},
        {"slug":"MKD","country_code":"389","country_name":"Macedonia",},
        {"slug":"MDG","country_code":"261","country_name":"Madagascar",},
        {"slug":"MWI","country_code":"265","country_name":"Malawi",},
        {"slug":"MYS","country_code":"60","country_name":"Malaysia",},
        {"slug":"MDV","country_code":"960","country_name":"Maldives",},
        {"slug":"MLI","country_code":"223","country_name":"Mali",},
        {"slug":"MLT","country_code":"356","country_name":"Malta",},
        {"slug":"MHL","country_code":"692","country_name":"Marshall Islands",},
        {"slug":"MRT","country_code":"222","country_name":"Mauritania",},
        {"slug":"MUS","country_code":"230","country_name":"Mauritius",},
        {"slug":"MYT","country_code":"262","country_name":"Mayotte",},
        {"slug":"MEX","country_code":"52","country_name":"Mexico",},
        {"slug":"FSM","country_code":"691","country_name":"Micronesia",},
        {"slug":"MDA","country_code":"373","country_name":"Moldova",},
        {"slug":"MCO","country_code":"377","country_name":"Monaco",},
        {"slug":"MNG","country_code":"976","country_name":"Mongolia",},
        {"slug":"MNE","country_code":"382","country_name":"Montenegro",},
        {"slug":"MSR","country_code":"1-664","country_name":"Montserrat",},
        {"slug":"MAR","country_code":"212","country_name":"Morocco",},
        {"slug":"MOZ","country_code":"258","country_name":"Mozambique",},
        {"slug":"MMR","country_code":"95","country_name":"Myanmar",},
        {"slug":"NAM","country_code":"264","country_name":"Namibia",},
        {"slug":"NRU","country_code":"674","country_name":"Nauru",},
        {"slug":"NPL","country_code":"977","country_name":"Nepal",},
        {"slug":"NLD","country_code":"31","country_name":"Netherlands",},
        {"slug":"ANT","country_code":"599","country_name":"Netherlands Antilles",},
        {"slug":"NCL","country_code":"687","country_name":"New Caledonia",},
        {"slug":"NZL","country_code":"64","country_name":"New Zealand",},
        {"slug":"NIC","country_code":"505","country_name":"Nicaragua",},
        {"slug":"NER","country_code":"227","country_name":"Niger",},
        {"slug":"NGA","country_code":"234","country_name":"Nigeria",},
        {"slug":"NIU","country_code":"683","country_name":"Niue",},
        {"slug":"PRK","country_code":"850","country_name":"North Korea",},
        {"slug":"MNP","country_code":"1-670","country_name":"Northern Mariana Islands",},
        {"slug":"NOR","country_code":"47","country_name":"Norway",},
        {"slug":"OMN","country_code":"968","country_name":"Oman",},
        {"slug":"PAK","country_code":"92","country_name":"Pakistan",},
        {"slug":"PLW","country_code":"680","country_name":"Palau",},
        {"slug":"PSE","country_code":"970","country_name":"Palestine",},
        {"slug":"PAN","country_code":"507","country_name":"Panama",},
        {"slug":"PNG","country_code":"675","country_name":"Papua New Guinea",},
        {"slug":"PRY","country_code":"595","country_name":"Paraguay",},
        {"slug":"PER","country_code":"51","country_name":"Peru",},
        {"slug":"PHL","country_code":"63","country_name":"Philippines",},
        {"slug":"PCN","country_code":"64","country_name":"Pitcairn",},
        {"slug":"POL","country_code":"48","country_name":"Poland",},
        {"slug":"PRT","country_code":"351","country_name":"Portugal",},
        {"slug":"PRI","country_code":"1-787, 1-939","country_name":"Puerto Rico",},
        {"slug":"QAT","country_code":"974","country_name":"Qatar",},
        {"slug":"COG","country_code":"242","country_name":"Republic of the Congo",},
        {"slug":"REU","country_code":"262","country_name":"Reunion",},
        {"slug":"ROU","country_code":"40","country_name":"Romania",},
        {"slug":"RUS","country_code":"7","country_name":"Russia",},
        {"slug":"RWA","country_code":"250","country_name":"Rwanda",},
        {"slug":"BLM","country_code":"590","country_name":"Saint Barthelemy",},
        {"slug":"SHN","country_code":"290","country_name":"Saint Helena",},
        {"slug":"KNA","country_code":"1-869","country_name":"Saint Kitts and Nevis",},
        {"slug":"LCA","country_code":"1-758","country_name":"Saint Lucia",},
        {"slug":"MAF","country_code":"590","country_name":"Saint Martin",},
        {"slug":"SPM","country_code":"508","country_name":"Saint Pierre and Miquelon",},
        {"slug":"VCT","country_code":"1-784","country_name":"Saint Vincent and the Grenadines",},
        {"slug":"WSM","country_code":"685","country_name":"Samoa",},
        {"slug":"SMR","country_code":"378","country_name":"San Marino",},
        {"slug":"STP","country_code":"239","country_name":"Sao Tome and Principe",},
        {"slug":"SAU","country_code":"966","country_name":"Saudi Arabia",},
        {"slug":"SEN","country_code":"221","country_name":"Senegal",},
        {"slug":"SRB","country_code":"381","country_name":"Serbia",},
        {"slug":"SYC","country_code":"248","country_name":"Seychelles",},
        {"slug":"SLE","country_code":"232","country_name":"Sierra Leone",},
        {"slug":"SGP","country_code":"65","country_name":"Singapore",},
        {"slug":"SXM","country_code":"1-721","country_name":"Sint Maarten",},
        {"slug":"SVK","country_code":"421","country_name":"Slovakia",},
        {"slug":"SVN","country_code":"386","country_name":"Slovenia",},
        {"slug":"SLB","country_code":"677","country_name":"Solomon Islands",},
        {"slug":"SOM","country_code":"252","country_name":"Somalia",},
        {"slug":"ZAF","country_code":"27","country_name":"South Africa",},
        {"slug":"KOR","country_code":"82","country_name":"South Korea",},
        {"slug":"SSD","country_code":"211","country_name":"South Sudan",},
        {"slug":"ESP","country_code":"34","country_name":"Spain",},
        {"slug":"LKA","country_code":"94","country_name":"Sri Lanka",},
        {"slug":"SDN","country_code":"249","country_name":"Sudan",},
        {"slug":"SUR","country_code":"597","country_name":"Suriname",},
        {"slug":"SJM","country_code":"47","country_name":"Svalbard and Jan Mayen",},
        {"slug":"SWZ","country_code":"268","country_name":"Swaziland",},
        {"slug":"SWE","country_code":"46","country_name":"Sweden",},
        {"slug":"CHE","country_code":"41","country_name":"Switzerland",},
        {"slug":"SYR","country_code":"963","country_name":"Syria",},
        {"slug":"TWN","country_code":"886","country_name":"Taiwan",},
        {"slug":"TJK","country_code":"992","country_name":"Tajikistan",},
        {"slug":"TZA","country_code":"255","country_name":"Tanzania",},
        {"slug":"THA","country_code":"66","country_name":"Thailand",},
        {"slug":"TGO","country_code":"228","country_name":"Togo",},
        {"slug":"TKL","country_code":"690","country_name":"Tokelau",},
        {"slug":"TON","country_code":"676","country_name":"Tonga",},
        {"slug":"TTO","country_code":"1-868","country_name":"Trinidad and Tobago",},
        {"slug":"TUN","country_code":"216","country_name":"Tunisia",},
        {"slug":"TUR","country_code":"90","country_name":"Turkey",},
        {"slug":"TKM","country_code":"993","country_name":"Turkmenistan",},
        {"slug":"TCA","country_code":"1-649","country_name":"Turks and Caicos Islands",},
        {"slug":"TUV","country_code":"688","country_name":"Tuvalu",},
        {"slug":"VIR","country_code":"1-340","country_name":"U.S. Virgin Islands",},
        {"slug":"UGA","country_code":"256","country_name":"Uganda",},
        {"slug":"UKR","country_code":"380","country_name":"Ukraine",},
        {"slug":"ARE","country_code":"971","country_name":"United Arab Emirates",},
        {"slug":"GBR","country_code":"44","country_name":"United Kingdom",},
        {"slug":"USA","country_code":"1","country_name":"United States",},
        {"slug":"URY","country_code":"598","country_name":"Uruguay",},
        {"slug":"UZB","country_code":"998","country_name":"Uzbekistan",},
        {"slug":"VUT","country_code":"678","country_name":"Vanuatu",},
        {"slug":"VAT","country_code":"379","country_name":"Vatican",},
        {"slug":"VEN","country_code":"58","country_name":"Venezuela",},
        {"slug":"VNM","country_code":"84","country_name":"Vietnam",},
        {"slug":"WLF","country_code":"681","country_name":"Wallis and Futuna",},
        {"slug":"ESH","country_code":"212","country_name":"Western Sahara",},
        {"slug":"YEM","country_code":"967","country_name":"Yemen",},
        {"slug":"ZMB","country_code":"260","country_name":"Zambia",},
        {"slug":"ZWE","country_code":"263","country_name":"Zimbabwe",},
        ]

        for country in countries:
            create_or_update_country(apps, country['slug'],country['country_code'],country['country_name'])

        # r = requests.get('https://countrycode.org/')
        # html = r.text
        # soup = BeautifulSoup(html, 'lxml')

        # table = soup.select_one('table.table')
        # for tr in table.select('tr'):
        #     tds = tr.select('td')
        #     if tds:
        #         s = tds[2].get_text().split('/')
        #         country_name = tds[0].get_text()
        #         country_code = tds[1].get_text()
        #         slug = s[1].strip()
        #         create_or_update_country(apps, slug, country_code, country_name)

    def insertTeamTypes(apps, schema_editor):
        TeamType = apps.get_model('core', 'TeamType')
        team_type = TeamType(slug='regular', name="Regular")
        team_type.save()
        team_type = TeamType(slug='national', name="National")
        team_type.save()


    def insertLoadSources(apps, schema_editor):
        Sport = apps.get_model('core', 'Sport')
        sport = Sport.objects.get(slug='football')
        LoadSource = apps.get_model('core', 'LoadSource')
        load_source = LoadSource(slug='manual', 
                                 sport=sport,
                                 name='Manual update',
                                 reliability=10,
                                 source_handler='',
                                 source_url='',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='espn',
                                 sport=sport,
                                 name='ESPN Soccer Scores',
                                 reliability=20,
                                 source_handler='',
                                 source_url='http://www.espn.com/soccer/scoreboard',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='understat',
                                 sport=sport,
                                 name='xG statistics',
                                 reliability=30,
                                 source_handler='',
                                 source_url='https://understat.com/',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='football_data',
                                 sport=sport,
                                 name='Historical Football Results',
                                 reliability=40,
                                 source_handler='',
                                 source_url='http://www.football-data.co.uk/data.php',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='xscores',
                                 sport=sport,
                                 name='Live Scores for Football',
                                 reliability=50,
                                 source_handler='',
                                 source_url='https://www.xscores.com/soccer/livescores',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='1xbet',
                                 sport=sport,
                                 name='1XBET Betting Company',
                                 reliability=60,
                                 source_handler='',
                                 source_url='https://1xmavemv.com/',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()
        load_source = LoadSource(slug='parimatch',
                                 sport=sport,
                                 name='Parimatch Betting Company',
                                 reliability=70,
                                 source_handler='',
                                 source_url='https://www.parimatch.com/en/',
                                 is_loadable=False,
                                 is_betting=False
                                )
        load_source.save()




    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('load_status', models.CharField(choices=[('c', 'Confirmed'), ('u', 'Unconfirmed')], default='c', max_length=5, verbose_name='Status')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('confirmed', models.DateTimeField(blank=True, null=True, verbose_name='Confirmed')),
                ('slug', models.SlugField(unique=True)),
                ('code', models.CharField(max_length=100, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=100, verbose_name='League')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Country', verbose_name='Country')),
            ],
            bases=(project.core.models.SaveSlugCountryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LoadSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=100, verbose_name='Source')),
                ('reliability', models.IntegerField(verbose_name='Reliability')),
                ('source_handler', models.CharField(blank=True, max_length=100, null=True, verbose_name='Handler')),
                ('source_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL')),
                ('is_loadable', models.BooleanField(blank=True, null=True, verbose_name='Load data')),
                ('is_betting', models.BooleanField(blank=True, null=True, verbose_name='Betting')),
                ('is_error', models.BooleanField(blank=True, null=True, verbose_name='Error')),
                ('error_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Error text')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Last update')),
                ('load_date', models.DateField(blank=True, null=True, verbose_name='Load date')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateField(verbose_name='Match date')),
                ('score', models.CharField(max_length=100, verbose_name='Score')),
                ('result', models.CharField(blank=True, choices=[('w', 'Win'), ('d', 'Draw'), ('l', 'Loose')], max_length=5, null=True, verbose_name='Result')),
                ('status', models.CharField(choices=[('Fin', 'Finished'), ('Sch', 'Scheduled'), ('Can', 'Cancelled'), ('Int', 'Interrupted')], default='n', max_length=5, verbose_name='Status')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.League', verbose_name='League')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Season')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.League', verbose_name='League')),
                ('load_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource', verbose_name='Source')),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='sport')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Last update')),
                ('is_loadable', models.BooleanField(verbose_name='Load data')),
                ('is_calculated', models.BooleanField(verbose_name='Calculate data')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=100, verbose_name='Team')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Country', verbose_name='Country')),
                ('load_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource', verbose_name='Source')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Sport', verbose_name='Sport')),
            ],
            bases=(project.core.models.SaveSlugCountryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Team type')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('load_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Team')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='team_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TeamType', verbose_name='Team type'),
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=100, verbose_name='Referee')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Country', verbose_name='Country')),
                ('load_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource', verbose_name='Source')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Sport', verbose_name='Sport')),
            ],
            bases=(project.core.models.SaveSlugCountryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MatchStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_type', models.CharField(choices=[('g', 'Goals'), ('xg', 'xG'), ('yc', 'Yellow cards'), ('rc', 'Red cards'), ('pen', 'Penalies'), ('gm', 'Goals (minutes)'), ('xgm', 'xG (minutes)'), ('ycm', 'Yellow cards (minutes)'), ('rcm', 'Red cards (minutes)'), ('gt', 'Goal time'), ('s', 'Shots'), ('sot', 'Shots on target'), ('d', 'Deep passes'), ('ppda', 'PPDA'), ('c', 'Corners'), ('f', 'Fouls'), ('fk', 'Free kicks'), ('o', 'Offsides'), ('pos', 'Possession')], max_length=10, verbose_name='Stat')),
                ('competitor', models.CharField(choices=[('h', 'Home team'), ('a', 'Away team')], max_length=5, verbose_name='Competitor')),
                ('period', models.IntegerField(verbose_name='Period')),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Match', verbose_name='Match')),
            ],
        ),
        migrations.CreateModel(
            name='MatchReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('load_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Match')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Referee')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='season',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Season', verbose_name='Season'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_a',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bcore_match_team_a_fk', to='core.Team', verbose_name='Away team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_h',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bcore_match_team_h_fk', to='core.Team', verbose_name='Home team'),
        ),
        migrations.AddField(
            model_name='loadsource',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Sport', verbose_name='Sport'),
        ),
        migrations.AddField(
            model_name='league',
            name='load_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.LoadSource', verbose_name='Source'),
        ),
        migrations.AddField(
            model_name='league',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Sport', verbose_name='Sport'),
        ),
        migrations.AddField(
            model_name='league',
            name='team_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.TeamType', verbose_name='Team type'),
        ),
        migrations.CreateModel(
            name='CountryLoadSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Object name')),
                ('status', models.CharField(choices=[('a', 'Active'), ('d', 'Deleted')], default='a', max_length=5, verbose_name='Status')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('confirmed', models.DateTimeField(blank=True, null=True, verbose_name='Confirmed')),
                ('selected', models.DateTimeField(blank=True, null=True, verbose_name='Selected')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_countryloadsource_country', to='core.Country', verbose_name='Country')),
                ('country_obj', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='object', to='core.Country', verbose_name='Country')),
                ('load_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_countryloadsource_load_source', to='core.LoadSource', verbose_name='Source')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_countryloadsource_sport', to='core.Sport', verbose_name='Sport')),
            ],
        ),
        migrations.AddField(
            model_name='country',
            name='load_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_country_load_source', to='core.LoadSource', verbose_name='Source'),
        ),
        migrations.AddConstraint(
            model_name='teammembership',
            constraint=models.UniqueConstraint(fields=('team', 'season'), name='unique_team_membership'),
        ),
        migrations.AddConstraint(
            model_name='team',
            constraint=models.UniqueConstraint(fields=('sport', 'country', 'slug'), name='unique_team'),
        ),
        migrations.AddConstraint(
            model_name='referee',
            constraint=models.UniqueConstraint(fields=('sport', 'country', 'slug'), name='unique_referee'),
        ),
        migrations.AddConstraint(
            model_name='matchstats',
            constraint=models.UniqueConstraint(fields=('match', 'stat_type', 'competitor', 'period'), name='unique_match_stats'),
        ),
        migrations.AddConstraint(
            model_name='matchreferee',
            constraint=models.UniqueConstraint(fields=('match', 'referee'), name='unique_match_referee'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['match_date'], name='match_date_idx'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(fields=('league', 'team_h', 'team_a', 'match_date'), name='unique_match'),
        ),
        migrations.AddConstraint(
            model_name='loadsource',
            constraint=models.UniqueConstraint(fields=('sport', 'slug'), name='unique_load_source'),
        ),
        migrations.AddConstraint(
            model_name='league',
            constraint=models.UniqueConstraint(fields=('sport', 'country', 'slug'), name='unique_league'),
        ),
        migrations.AddConstraint(
            model_name='countryloadsource',
            constraint=models.UniqueConstraint(fields=('sport', 'slug', 'load_source'), name='unique_country_load_source'),
        ),

        migrations.RunPython(insertSport),
        migrations.RunPython(load_countries),
        migrations.RunPython(insertTeamTypes),
        migrations.RunPython(insertLoadSources),
    ]
